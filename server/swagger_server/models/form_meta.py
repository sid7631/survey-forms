# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class FormMeta(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, name: str=None, owner: str=None, last_update: str=None, active: bool=None):  # noqa: E501
        """FormMeta - a model defined in Swagger

        :param name: The name of this FormMeta.  # noqa: E501
        :type name: str
        :param owner: The owner of this FormMeta.  # noqa: E501
        :type owner: str
        :param last_update: The last_update of this FormMeta.  # noqa: E501
        :type last_update: str
        :param active: The active of this FormMeta.  # noqa: E501
        :type active: bool
        """
        self.swagger_types = {
            'name': str,
            'owner': str,
            'last_update': str,
            'active': bool
        }

        self.attribute_map = {
            'name': 'name',
            'owner': 'owner',
            'last_update': 'lastUpdate',
            'active': 'active'
        }
        self._name = name
        self._owner = owner
        self._last_update = last_update
        self._active = active

    @classmethod
    def from_dict(cls, dikt) -> 'FormMeta':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FormMeta of this FormMeta.  # noqa: E501
        :rtype: FormMeta
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this FormMeta.


        :return: The name of this FormMeta.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this FormMeta.


        :param name: The name of this FormMeta.
        :type name: str
        """

        self._name = name

    @property
    def owner(self) -> str:
        """Gets the owner of this FormMeta.


        :return: The owner of this FormMeta.
        :rtype: str
        """
        return self._owner

    @owner.setter
    def owner(self, owner: str):
        """Sets the owner of this FormMeta.


        :param owner: The owner of this FormMeta.
        :type owner: str
        """

        self._owner = owner

    @property
    def last_update(self) -> str:
        """Gets the last_update of this FormMeta.


        :return: The last_update of this FormMeta.
        :rtype: str
        """
        return self._last_update

    @last_update.setter
    def last_update(self, last_update: str):
        """Sets the last_update of this FormMeta.


        :param last_update: The last_update of this FormMeta.
        :type last_update: str
        """

        self._last_update = last_update

    @property
    def active(self) -> bool:
        """Gets the active of this FormMeta.


        :return: The active of this FormMeta.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active: bool):
        """Sets the active of this FormMeta.


        :param active: The active of this FormMeta.
        :type active: bool
        """

        self._active = active
